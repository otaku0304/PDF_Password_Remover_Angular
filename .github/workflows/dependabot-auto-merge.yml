name: Auto-merge Dependabot PRs

permissions:
  contents: write
  pull-requests: write

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Check for existing open PRs
        id: check_open_prs
        run: |
          pr_count=$(curl -s "https://api.github.com/repos/${{ github.repository }}/pulls?state=open&base=dev" | jq '. | length')
          echo "pr_count=$pr_count" >> "$GITHUB_ENV"

      - name: Exit if no open PRs
        if: env.pr_count == '0'
        run: exit 0

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check if PR is created by Dependabot and targets dev branch
        id: check_dependabot
        run: |
          if [[ "${{ github.actor }}" == "dependabot[bot]" && "${{ github.event.pull_request.base.ref }}" == "dev" ]]; then
            echo "is_dependabot=true" >> $GITHUB_ENV
          else
            echo "is_dependabot=false" >> $GITHUB_ENV
          fi

      - name: Get pull request details
        id: get_pr_details
        run: |
          pr_url="https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}"
          pr_title=$(curl -s "$pr_url" | jq -r '.title')
          echo "PR_TITLE=$pr_title" >> $GITHUB_ENV

      - name: Extract package details
        id: extract_details
        run: |
          PR_TITLE="${{ env.PR_TITLE }}"
          package_name=$(echo "$PR_TITLE" | sed -E 's/Bump ([^ ]+) from.*/\1/')
          previous_version=$(echo "$PR_TITLE" | grep -oP '(?<=from )\d+\.\d+\.\d+')
          new_version=$(echo "$PR_TITLE" | grep -oP '(?<=to )\d+\.\d+\.\d+')
          echo "PACKAGE_NAME=$package_name" >> $GITHUB_ENV
          echo "PREVIOUS_VERSION=$previous_version" >> $GITHUB_ENV
          echo "NEW_VERSION=$new_version" >> $GITHUB_ENV

      - name: Fetch compatibility score
        id: request_compatibility_score
        run: |
          compatibility_url="https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=${{ env.PACKAGE_NAME }}&package-manager=npm_and_yarn&previous-version=${{ env.PREVIOUS_VERSION }}&new-version=${{ env.NEW_VERSION }}"
          compatibility_score=$(curl -s "$compatibility_url" | grep -oP '(?<=<title>compatibility: )\d+(?=%</title>)' || echo "0")
          echo "COMPATIBILITY_SCORE=$compatibility_score" >> $GITHUB_ENV

      - name: Auto-merge if compatibility score is 100%
        if: env.COMPATIBILITY_SCORE == '100'
        run: |
          echo "Merging PR..."
          gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
          gh pr merge ${{ github.event.pull_request.number }} --auto --squash --delete-branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
